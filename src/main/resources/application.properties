# Configure the HTTP port (default is 8080)
quarkus.http.port=8080

# Configure the host (0.0.0.0 allows external access)
quarkus.http.host=0.0.0.0

# Enable CORS
quarkus.http.cors=true

# Using the maven version as the application version
quarkus.application.version=${project.version}

# Logging configuration
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=INFO

# Development mode settings
%dev.quarkus.log.console.level=DEBUG

# Delaying the start of the disposer thread (to be able to build GraalVM Native Images)
quarkus.native.additional-build-args=--initialize-at-run-time=sun.java2d.Disposer, -H:+AddAllCharsets

# Docker
quarkus.native.container-build=true
#quarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-17
quarkus.container-image.build=true
quarkus.container-image.group=greystone
quarkus.container-image.name=openjdk-helper
quarkus.container-image.tag=latest

# OpenAPI Spec and Swagger
quarkus.smallrye-openapi.path=/openapi
quarkus.swagger-ui.path=/swagger-ui
quarkus.swagger-ui.always-include=true
#quarkus.swagger-ui.urls.default=/openjdk/openapi


# Giving up trying to make this work nicely with a reverse proxy...
#quarkus.smallrye-openapi.servers=https://api.hirt.se/openjdk

# Make quarkus work when behind a reverse proxy
quarkus.http.proxy.proxy-address-forwarding = true
quarkus.http.proxy.enable-forwarded-host = true
